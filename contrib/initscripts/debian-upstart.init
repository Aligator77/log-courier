#!/bin/bash
#
### BEGIN INIT INFO
# Provides:          log-courier
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Log Courier
# Description:       Sends logs over the network to a log collector
### END INIT INFO

# TODO(driskell): Is this needed?
PATH=/sbin:/usr/sbin:/bin:/usr/bin

. /lib/init/vars.sh
. /lib/lsb/init-functions

NAME=log-courier
DESC="Log Courier"
DAEMON=/usr/sbin/log-courier
PIDFILE=/var/run/${NAME}.pid

# Defaults
LOG_COURIER_ARGS=""
LOG_COURIER_USER="log-courier"

# Override defaults from default
# shellcheck source=/dev/null
[ -f "/etc/default/${NAME}" ] && . "/etc/default/${NAME}"

do_start_daemon() {
  start-stop-daemon --start --quiet --pidfile "$PIDFILE" --user "${LOG_COURIER_USER}" --chuid "${LOG_COURIER_USER}" --exec /bin/sh --test > /dev/null || return 1
  start-stop-daemon --start --quiet --make-pidfile --background --pidfile "$PIDFILE" --user "${LOG_COURIER_USER}" --chuid "${LOG_COURIER_USER}" --exec "$DAEMON" -- $LOG_COURIER_ARGS || return 2
}

do_start() {
  [ "$VERBOSE" != no ] && log_daemon_msg "Starting ${DESC}" "$NAME"
  do_start_daemon
  RC=$?
  case "$RC" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  return $RC
}

do_stop()
{
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile "$PIDFILE" --user "${LOG_COURIER_USER}"
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --user "${LOG_COURIER_USER}" --exec "$DAEMON"
  [ "$?" = 2 ] && return 2
  rm -f "$PIDFILE"
  return "$RETVAL"
}

case "$1" in
  start)
    $0 configtest && do_start
    RC=$?
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping ${DESC}" "$NAME"
    do_stop
    RC=$?
    case "$RC" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME"
    RC=$?
    ;;
  restart|force-reload)
    $0 configtest
    RC=$?
    if [ $RC -eq 0 ]; then
      $0 stop
      RC=$?
      case "$RC" in
        0|1)
          do_start
          RC=$?
          case "$RC" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
          esac
        ;;
        *)
          # Failed to stop
          log_end_msg 1
        ;;
      esac
    fi
    ;;
  configtest)
    log_daemon_msg "Configuration testing ${DESC}" "$NAME"
    TESTRESULT=$( su --login "$LOG_COURIER_USER" -c "$(printf '%q' "$DAEMON") $LOG_COURIER_ARGS -config-test" )
    RC=$?
    if [ $RC -ne 0 ]; then
      echo
      echo "${TESTRESULT}"
      log_end_msg 1
    else
      log_end_msg 0
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|force-reload|configtest}" >&2
    exit 3
    ;;
esac

exit $RC
